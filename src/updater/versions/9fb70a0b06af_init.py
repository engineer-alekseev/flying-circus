"""init

Revision ID: 9fb70a0b06af
Revises: 
Create Date: 2024-04-03 01:39:43.630249

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9fb70a0b06af'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('booking')
    op.drop_table('room')
    op.drop_table('violation')
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('telegram_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('auth_method', postgresql.ENUM('NATIVE', 'GOOGLE', 'GITLAB', 'TELEGRAM', name='authmethod'), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('USER', 'ADMIN', name='role'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('telegram_id', name='user_telegram_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('violation',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('violation_type', postgresql.ENUM('ROOM_NOT_USED', 'OVERBOOKING', 'INAPPROPRIATE_USAGE', name='violationtype'), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('booking_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.id'], name='violation_booking_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='violation_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='violation_pkey')
    )
    op.create_table('room',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('capacity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('min_time', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('max_time', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('photo_link', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='room_pkey'),
    sa.UniqueConstraint('name', name='room_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('booking',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('room_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], name='booking_room_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='booking_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='booking_pkey')
    )
    # ### end Alembic commands ###
